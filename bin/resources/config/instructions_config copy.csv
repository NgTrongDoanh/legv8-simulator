# LEGv8 Instruction Configuration
# Columns: Mnemonic,Format,OpcodeID(Bin),RegW,ALUSrc,MemW,MemR,MemToReg,ZeroB,FlagB,UncondB,Reg2Loc,FlagW,ALUOperation(Enum)
#---------------------------------------------------------------------------------------------------------------------------
# --- R-Format (OpcodeID = bits 31-21) ---
ADD,R,10001011000,1,0,0,0,0,0,0,0,0,0,000
ADDS,R,10101011000,1,0,0,0,0,0,0,0,0,1,10
SUB,R,11001011000,1,0,0,0,0,0,0,0,0,0,10
SUBS,R,11101011000,1,0,0,0,0,0,0,0,0,1,10
AND,R,10001010000,1,0,0,0,0,0,0,0,0,0,10
ANDS,R,11101010000,1,0,0,0,0,0,0,0,0,1,10
ORR,R,10101010000,1,0,0,0,0,0,0,0,0,0,10
EOR,R,11001010000,1,0,0,0,0,0,0,0,0,0,10
LSL,R,11010011011,1,0,0,0,0,0,0,0,0,0,10
LSR,R,11010011010,1,0,0,0,0,0,0,0,0,0,10
ASR,R,11010011001,1,0,0,0,0,0,0,0,0,0,10
MUL,R,10011011000,1,0,0,0,0,0,0,0,0,0,10
SMULH,R,10011011010,1,0,0,0,0,0,0,0,0,0,10
UMULH,R,10011011110,1,0,0,0,0,0,0,0,0,0,10
SDIV,R,10011010110,1,0,0,0,0,0,0,0,0,0,10
UDIV,R,10011010111,1,0,0,0,0,0,0,0,0,0,10
# BR,R,11010110000,0,0,0,0,0,0,0,1,0,0,11
# --- I-Format (OpcodeID = bits 31-22) ---
ADDI,I,1001000100,1,1,0,0,0,0,0,0,0,0,00
ADDIS,I,1011000100,1,1,0,0,0,0,0,0,0,1,00
SUBI,I,1101000100,1,1,0,0,0,0,0,0,0,0,00
SUBIS,I,1111000100,1,1,0,0,0,0,0,0,0,1,00
ANDI,I,1001001000,1,1,0,0,0,0,0,0,0,0,00
ANDIS,I,1111001000,1,1,0,0,0,0,0,0,0,1,00
ORI,I,1011001000,1,1,0,0,0,0,0,0,0,0,ORR
EORI,I,1101001000,1,1,0,0,0,0,0,0,0,0,EOR
# --- D-Format (OpcodeID = bits 31-21, same range as R) ---
LDUR,D,11111000010,1,1,0,1,1,0,0,0,0,0,00
STUR,D,11111000000,0,1,1,0,0,0,0,0,0,0,00
LDURB,D,00111001010,1,1,0,1,1,0,0,0,0,0,00
STURB,D,00111001000,0,1,1,0,0,0,0,0,0,0,00
LDURH,D,01111001010,1,1,0,1,1,0,0,0,0,0,00
STURH,D,01111001000,0,1,1,0,0,0,0,0,0,0,00
LDURSW,D,10111001010,1,1,0,1,1,0,0,0,0,0,00
STURW,D,10111001000,0,1,1,0,0,0,0,0,0,0,00
# --- B-Format (OpcodeID = bits 31-26) ---
B,B,000101,0,0,0,0,0,0,0,1,0,0,IDLE
BL,B,100101,1,0,0,0,0,0,0,1,0,0,IDLE
# --- CB-Format (OpcodeID = bits 31-24) ---
CBZ,C,10110100,0,0,0,0,0,1,0,0,0,1,SUB
CBNZ,C,10110101,0,0,0,0,0,1,0,0,0,1,SUB
# --- B.cond (Shares OpcodeID with CB-Format, but different control) ---
# Assuming format 'C' for B.cond, OpcodeID = 01010100 (Placeholder, check spec)
# Simulator logic uses FlagBranch=1 to differentiate
B.EQ,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.NE,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.CS,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.CC,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.MI,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.PL,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.VS,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.VC,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.HI,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.LS,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.GE,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.LT,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.GT,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
B.LE,C,01010100,0,0,0,0,0,0,1,0,0,0,IDLE
# --- IM-Format (OpcodeID = bits 31-23) ---
MOVZ,IM,110100101,1,1,0,0,0,0,0,0,0,0,MOV
MOVK,IM,111100101,1,1,0,0,0,0,0,0,0,0,MOV